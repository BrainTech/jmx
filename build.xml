<project name="JMX" default="all" basedir=".">

  <property name="src" location="src" />
  <property name="test.src" location="test" />
  <property name="build" location="bin" />
  <property name="libs" location="${basedir}/libs" />
  <property name="debug" value="true" />

  <property name="system.rules" value="system.rules" />
  <property name="constants.src"
            value="${src}/multiplexer/protocol/Constants.java" />

  <property name="test.rules" value="test.rules" />
  <property name="test.constants.src"
            value="${test.src}/multiplexer/jmx/test/TestConstants.java" />

  <path id="project.tools.path">
    <pathelement location="${build}" />
    <pathelement location="${libs}/protobuf.jar" />
    <pathelement location="${libs}/args4j-2.0.10.jar" />
  </path>

  <path id="project.class.path">
    <pathelement location="${build}" />
    <pathelement location="${libs}/protobuf.jar" />
    <pathelement location="${libs}/netty-3.1.0.BETA3.jar" />
    <pathelement location="${libs}/google-collect-1.0-rc2.jar" />
    <pathelement location="${libs}/slf4j-api-1.5.8.jar" />
    <pathelement location="${libs}/slf4j-jdk14-1.5.8.jar" />
    <pathelement location="${libs}/trove-2.0.4.jar" />
    <pathelement location="${libs}/args4j-2.0.10.jar" />
  </path>

  <path id="project.test.class.path">
    <path refid="project.class.path" />
    <pathelement location="${libs}/junit-4.6.jar" />
  </path>

  <!-- init -->
  <target name="init">
    <mkdir dir="${build}" />
  </target>

  <!-- all -->
  <target name="all" depends="build,doc,test" />

  <!-- macro compile-constants -->
  <macrodef name="compile-constants">
    <attribute name="input" />
    <attribute name="output" />
    <attribute name="outdir" />
    <sequential>
      <javac srcdir="${src}"
             destdir="${build}"
             encoding="utf8"
             classpathref="project.tools.path"
             includes="multiplexer/jmx/tools/CompileConstants.java" />
      <echo message="Creating @{output} from @{input}" />
      <java classname="multiplexer.jmx.tools.CompileConstants"
            failonerror="true">
        <arg value="-system" />
        <arg value="-input" />
        <arg value="@{input}" />
        <arg value="-outdir" />
        <arg value="@{outdir}" />
        <arg value="-output" />
        <arg value="@{output}" />
        <classpath refid="project.tools.path" />
      </java>
    </sequential>
  </macrodef>

  <!-- constants -->
  <target name="constants"
          depends="init,constants.check"
          unless="constants.notRequired">
    <compile-constants input="${system.rules}"
                       outdir="${src}"
                       output="${constants.src}" />
  </target>
  <target name="constants.check" depends="init">
    <uptodate property="constants.notRequired"
              srcfile="${system.rules}"
              targetfile="${constants.src}" />
  </target>

  <!-- test-constants -->
  <target name="test-constants"
          depends="init,test-constants.check"
          unless="test-constants.notRequired">
    <compile-constants input="${test.rules}"
                       outdir="${test.src}"
                       output="${test.constants.src}" />
  </target>
  <target name="test-constants.check">
    <uptodate property="test-constants.notRequired"
              srcfile="${test.rules}"
              targetfile="${test.constants.src}" />
  </target>

  <!-- sources -->
  <target name="sources"
          depends="constants"
          description="create the sources that are generated" />

  <!-- test-sources -->
  <target name="test-sources"
          depends="sources,test-constants"
          description="create the test sources that are generated" />

  <!-- build -->
  <target name="build"
          depends="init,sources"
          description="compiles the sources with debug=${debug}">
    <javac srcdir="${src}"
           destdir="${build}"
           classpathref="project.class.path"
           source="1.5"
           target="1.5"
           encoding="utf8"
           debug="${debug}"
           debuglevel="lines,vars,source">
    </javac>
  </target>

  <!-- build-test -->
  <target name="build-test" depends="init,test-sources,build">
    <mkdir dir="${build}" />
    <javac srcdir="${test.src}"
           destdir="${build}"
           source="1.5"
           target="1.5"
           encoding="utf8"
           debug="${debug}"
           debuglevel="lines,vars,source">
      <classpath refid="project.class.path" />
      <classpath refid="project.test.class.path" />
    </javac>
  </target>

  <!-- test -->
  <target name="test" depends="build-test">
    <junit printsummary="true" fork="true" haltonfailure="true">
      <sysproperty key="java.util.logging.config.file" value="jul.test.properties"/>
      <assertions>
        <enable />
      </assertions>
      <!--classpath refid="project.class.path" /-->
      <classpath refid="project.test.class.path" />

      <formatter type="plain" />

      <test name="multiplexer.jmx.test.TestConnectivity" />
      <test name="multiplexer.jmx.test.TestByteBufferSerialization" />
    </junit>
  </target>

  <!-- javadoc -->
  <target name="doc" depends="init,constants" description="generates Javadoc">
    <javadoc access="protected"
             author="true"
             classpathref="project.class.path"
             destdir="doc"
             sourcepath="${src}"
             encoding="utf8"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             source="1.6"
             splitindex="true"
             use="true"
             version="true">
      <link href="http://java.sun.com/javase/6/docs/api/" />
      <link href="http://code.google.com/apis/protocolbuffers/docs/reference/java/" />
      <link href="http://www.jboss.org/file-access/default/members/netty/freezone/api/3.1/" />
      <link href="http://google-collections.googlecode.com/svn/trunk/javadoc/" />
      <package name="*" />
    </javadoc>
  </target>

</project>
